{"version":3,"sources":["logo.svg","components/pieces/Login.jsx","components/pages/ViewLogin.jsx","components/pieces/Planes.jsx","components/pages/ViewHome.jsx","components/pieces/predictive-input.js","components/pieces/calendario.js","components/pages/NewReserva.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Login","history","useState","email","setEmail","password","setPassword","err","setErr","className","onSubmit","e","preventDefault","console","log","firebase","auth","signInWithEmailAndPassword","then","res","replace","catch","error","message","src","logoBlanco","type","name","value","onChange","target","placeholder","data-testid","ViewLogin","ListPlans","arrPlan","setArrPlan","arrProd","setArrProd","arrPrecie","setArrPrecie","userCurrent","currentUser","user","firestore","collection","where","uid","get","result","arr","forEach","doc","data","products","useEffect","resp","elem","obj","idDocumento","id","title","recargo","surcharge","horario","schedule","programaDia","dia","push","precio","ad_price","producto","name_product","map","key","plan","ViewHome","CampoProducto","list","React","Component","ListProducto","props","listProduct","product","i","CalendarioSelect","state","handleClickDia","bind","this","setState","valueAsDate","getDay","Fragment","Planes","ViewNewReserva","isDay","isPlan","planes","idPlan","App","path","component","exact","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d73df4c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.469cfe36.svg\";","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport logoBlanco from '../../logo.svg';\nimport Header from '../pieces/Header.jsx';\n\nconst Login =({ history })=>{\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [err, setErr] = useState('');\n  // const [arrProd, setArrProd] = useState([]);\n\n\n  const FEmail = (e) => {\n    setEmail(e.target.value);\n    console.log(e.target.value);\n  };\n  const FPassword = (e) => {\n    setPassword(e.target.value);\n    console.log(e.target.value);\n  };\n\n\n\t\n\treturn(\n\t\t<div className=\"cont-formulario\">   \n\t\t\t<form className=\"form-login\" onSubmit={(e) => {\n         e.preventDefault();\n         if (!email || !password) {\n           console.log('Debes colocar email y password');\n           setErr('Debes colocar email y password');\n           return false;\n         }\n         firebase.auth().signInWithEmailAndPassword(email,password).then((res) => {\n           console.log(res);\n           console.log('autentificado');\n           history.replace('/Home');\n         }).catch((error) => {\n           console.error(error.message);\n           setErr(error.message);\n         });\n       }}>\n         <div className=\"cont-logo\">\n         <img src={logoBlanco} />\n         <p>Am√©rica Comercial</p>\n         </div>\n\t\t\t\t<div>\n          <input type=\"text\" name=\"email\" value={email} onChange={FEmail} placeholder=\"email\"/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"password\" name=\"password\" value={password} onChange={FPassword} placeholder=\"pasword\"/>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"btn\" type=\"submit\" value=\"btn\">Login</button>\n                {err && <p data-testid=\"mensajeError\" >{err}</p>}\n\t\t\t</form>\n\t\t</div>\n\t);\n};\nLogin.propTypes = {\n    history: PropTypes.object.isRequired,\n  };\nexport default Login;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Login from '../pieces/Login.jsx';\r\n\r\nconst ViewLogin = ({ history }) => (<Login history={history}/>);\r\n\r\nViewLogin.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\nexport default ViewLogin;\r\n","import React, {useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst ListPlans = () => {\n\n\tconst [arrPlan, setArrPlan] = useState([]);\n\tconst [arrProd, setArrProd] = useState([]);\n\tconst [arrPrecie, setArrPrecie]=useState([]);\n\n\n\t\tconst userCurrent = () => firebase.auth().currentUser;\n\t\tconst user = userCurrent();\n\t\t\n\t\t  if (user) {\n\t\t\tconsole.log(user.email);\n\t\t\tfirebase.firestore().collection('user').where('id', '==', userCurrent().uid).get()\n\t\t\t  .then((result) => {\n\t\t\t\tlet arr=[];\n\t\t\t\tresult.forEach((doc) => {\n\t\t\t\t arr = doc.data().products;\n\t\t\t\t});\n\t\t\t\tsetArrProd(arr);\n\t\t\t  });\n\t\t\t}\n\n\n\tconst Planes = () => firebase.firestore().collection('plans').get()\n  .then((resp) => {\n    const arr = [];\n    resp.forEach((elem) => {\n\t\t\t\n      const obj = {\n        idDocumento: elem.id,\n        id: elem.data().id,\n        title: elem.data().title,\n        recargo: elem.data().surcharge,\n        horario: elem.data().schedule,\n\t\t\t\tprogramaDia: elem.data().dia,\n\t\t\t\t// precio: arrPrecie.precio,\n      };\n\t\t\tarr.push(obj);\n\t\t});\n\t\tconsole.log(arr);\n    setArrPlan(arr);\n\t});\n\n\tconst Precios = () => firebase.firestore().collection('list-price').get()\n.then((resp)=>{\n    const arr =[];\n    resp.forEach((elem)=>{\n        const obj={\n            precio:elem.data().ad_price,\n            producto:elem.data().name_product,\n        };\n        arr.push(obj);\n    });\n    setArrPrecie(arr);\n});\n\n  useEffect(() => {\n\tPlanes();\n\t}, []);\n\n\tPrecios();\n\n\treturn(\n\t\t<div>\n\t\t\t<div><p>Bienvenido {userCurrent()}</p></div>\n\t\t\t<div>\n\t\t\t\t<p>Elige el producto</p>\n\t\t\t\t<select >\n\t\t\t\t\t{arrProd.map((producto) => <option key={producto.id}>{producto}</option>)}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>Elige el plan</p>\n\t\t\t\t{arrPlan.map((plan) => <div key={plan.id}>\n\t\t\t\t<button >\n\t\t\t\t{plan.title} {plan.id} {plan.horario} {plan.recargo}\n\t\t\t\t{arrPrecie.map((precio)=><div>\n\t\t\t\t\t<p>{precio.precio}</p>\n\t\t\t\t</div>)}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>  \n\t);\n};\n\nexport default ListPlans;\n","import React from 'react';\n// import Header from '../pieces/Header.jsx';\n// import Planes from '../pieces/Planes.jsx';\nimport ListPlans from '../pieces/Planes.jsx';\n// import ListPrecie from '../pieces/Precios.jsx';\n\nconst ViewHome = () => {\n  return (\n    <>\n  \t  {/* <Header/> */}\n      <ListPlans/>\n      {/* <ListPrecie/> */}\n    </>\n  );\n};\n\nexport default ViewHome;\n","import React from 'react';\r\n// import firebase from 'firebase';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport class CampoProducto extends React.Component {\r\n  // eslint-disable-next-line class-methods-use-this\r\n  render() {\r\n    return (\r\n    <form>\r\n    <label>Producto o Marca:</label><br />\r\n    <input className=\"input-generic\" placeholder=\"Ejem: Coca-Cola\" list=\"list\"/>\r\n    <ListProducto data={['Product A', 'Producto B']} />\r\n    </form>\r\n    );\r\n  }\r\n}\r\nconst ListProducto = (props) => {\r\n  // fff();\r\n  // eslint-disable-next-line react/prop-types\r\n  const listProduct = props.data.map((product, i) => <option key={i} value={product}/>);\r\n  return (\r\n    <datalist id=\"list\">{listProduct}</datalist>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport class CalendarioSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { dia: '' };\r\n\r\n    this.handleClickDia = this.handleClickDia.bind(this);\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  handleClickDia(e) {\r\n    const dias = ['Lunes', 'Martes', 'Mi√©rcoles', 'Jueves', 'Viernes', 'S√°bado', 'Domingo'];\r\n    this.setState({ dia: (dias[e.target.valueAsDate.getDay()]) });// <-Nos da el dia\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<input id =\"date\" type=\"date\" name=\"\" onChange={this.handleClickDia}/>\r\n\t\t\t\t<p>Dia seleccionado es: {this.state.dia}</p>\r\n\t\t\t</React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport firebase from 'firebase';\nimport { CampoProducto } from '../pieces/predictive-input';\nimport { CalendarioSelect } from '../pieces/calendario';\n// import { ListProgramacion } from '../pieces/programacion';\n\nconst Planes = () => firebase.firestore().collection('plans').get()\n  .then((resp) => {\n    const arr = [];\n    resp.forEach((elem) => {\n      const obj = {\n        idDocumento: elem.id,\n        id: elem.data().id,\n        title: elem.data().title,\n        recargo: elem.data().surcharge,\n        horario: elem.data().schedule,\n        programaDia: elem.data().dia,\n      };\n      arr.push(obj);\n    });\n    return arr;\n  });\n\n// eslint-disable-next-line import/prefer-default-export\nexport class ViewNewReserva extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDay: 'Lunes',\n      isPlan: '01',\n      planes: Planes(),\n    };\n    // this.handleClickProductos = this.handleClickProductos.bind(this);\n  }\n\n  render() {\n    return (\n        <React.Fragment>\n        <CampoProducto />\n        <CalendarioSelect />\n        <Planes dia={this.state.isDay} idPlan={this.state.isPlan}/>\n        {/* <ListProgramacion/> */}\n        </ React.Fragment>\n    );\n  }\n}\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport ViewLogin from './components/pages/ViewLogin.jsx';\r\nimport ViewHome from './components/pages/ViewHome.jsx';\r\nimport { ViewNewReserva } from './components/pages/NewReserva';\r\n\r\nconst App = () => (\r\n    <Router>\r\n      <Switch>\r\n      <Route path=\"/\" component={ViewLogin} exact />\r\n        <Route path=\"/Home\" component={ViewHome} />\r\n        <Route path=\"/new-reserva\" component={ViewNewReserva} />\r\n      </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport firebase from 'firebase';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n// Initialize Firebase\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyCEV44bwQis9WuCSFDqI_cIPRmflKxs4Gg',\r\n  authDomain: 'web-app-reserva-de-anuncios.firebaseapp.com',\r\n  databaseURL: 'https://web-app-reserva-de-anuncios.firebaseio.com',\r\n  projectId: 'web-app-reserva-de-anuncios',\r\n  storageBucket: 'web-app-reserva-de-anuncios.appspot.com',\r\n  messagingSenderId: '964377975348',\r\n  appId: '1:964377975348:web:239e2e054b2dbf80660861',\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}